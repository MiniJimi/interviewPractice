#e.g. Roman to Integer

#Description: given a roman numeral, return the integer total

#Assumptions: we understand how to sum roman numerals

#Write the equivalent int for each roman numeral
#We will index through each position, totaling the roman numerals
#To sum roman numerals, the largest numbers are to the left position, smallest to right position
#When a numeral is smaller, but located to the left position, this signals that subtraction is needed
#We accomplish this by comparing two numbers and the greater than operator
#use a variable to keep a running total, and a variable for position such as i


#Soln
values = {
    "I" : 1, "V" : 5, "X" : 10, "L" : 50, "C" : 100, "D" : 500, "M" : 1000,
}

class Solution:
    def romanToInt(self, s: str)-> int:
        total = 0
        i = 0
        while i < len(s):
            #if we need to use subtraction
            if i + 1 < len(s) and values[s[i]] < values[s[i + 1]]:
                total += values[s[i + 1]] - values[s[i]]
                #index 2 positions to account for subtraction of two numbers
                i += 2
            #no subtraction needed
            else:
                total += values[s[i]]
                #index 1 position
                i+=1
        return total  
